{"ast":null,"code":"/* eslint-disable react/prop-types */import React from'react';import{CCard,CCardHeader,CCardBody,CNavLink}from'@coreui/react-pro';import{GoogleMap,InfoWindow,Marker,useJsApiLoader}from'@react-google-maps/api';import{ProBadge}from'src/components';// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const apiKey='AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA';const defaultZoom=11;const defaultCenter={lat:37.431489,lng:-122.163719};const locations=[{lat:37.431489,lng:-122.163719,label:'S',draggable:false,title:'Stanford',www:'https://www.stanford.edu/'},{lat:37.394694,lng:-122.150333,label:'T',draggable:false,title:'Tesla',www:'https://www.tesla.com/'},{lat:37.331681,lng:-122.0301,label:'A',draggable:false,title:'Apple',www:'https://www.apple.com/'},{lat:37.484722,lng:-122.148333,label:'F',draggable:false,title:'Facebook',www:'https://www.facebook.com/'}];const MarkerList=()=>{return locations.map((location,index)=>{return/*#__PURE__*/_jsx(MarkerWithInfoWindow,{location:location},index.toString());});};const MarkerWithInfoWindow=_ref=>{let{location}=_ref;const[isOpen,setIsOpen]=React.useState(false);return/*#__PURE__*/_jsx(Marker,{onClick:()=>setIsOpen(!isOpen),position:location,title:location.title,label:location.label,children:isOpen&&/*#__PURE__*/_jsx(InfoWindow,{onCloseClick:()=>setIsOpen(false),children:/*#__PURE__*/_jsx(CNavLink,{href:location.www,target:\"_blank\",children:location.title})})});};const GoogleMapsComponent=()=>{const{isLoaded}=useJsApiLoader({id:'google-map-script',googleMapsApiKey:apiKey});return isLoaded&&/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:{height:\"400px\"},center:defaultCenter,zoom:defaultZoom,children:[/*#__PURE__*/_jsx(MarkerList,{locations:locations}),/*#__PURE__*/_jsx(_Fragment,{})]});};const GoogleMaps=()=>{return/*#__PURE__*/_jsxs(CCard,{children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[\"React Google Maps \",/*#__PURE__*/_jsx(ProBadge,{})]}),/*#__PURE__*/_jsx(CCardBody,{children:/*#__PURE__*/_jsx(GoogleMapsComponent,{})})]});};export default GoogleMaps;","map":{"version":3,"names":["React","CCard","CCardHeader","CCardBody","CNavLink","GoogleMap","InfoWindow","Marker","useJsApiLoader","ProBadge","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","apiKey","defaultZoom","defaultCenter","lat","lng","locations","label","draggable","title","www","MarkerList","map","location","index","MarkerWithInfoWindow","toString","_ref","isOpen","setIsOpen","useState","onClick","position","children","onCloseClick","href","target","GoogleMapsComponent","isLoaded","id","googleMapsApiKey","mapContainerStyle","height","center","zoom","GoogleMaps"],"sources":["/home/vagrant/floranova/resources/coreui/src/views/plugins/google-maps/GoogleMaps.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { CCard, CCardHeader, CCardBody, CNavLink } from '@coreui/react-pro'\nimport { GoogleMap, InfoWindow, Marker, useJsApiLoader } from '@react-google-maps/api'\nimport { ProBadge } from 'src/components'\n\n// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\nconst apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\n\nconst defaultZoom = 11\nconst defaultCenter = { lat: 37.431489, lng: -122.163719 }\nconst locations = [\n  {\n    lat: 37.431489,\n    lng: -122.163719,\n    label: 'S',\n    draggable: false,\n    title: 'Stanford',\n    www: 'https://www.stanford.edu/',\n  },\n  {\n    lat: 37.394694,\n    lng: -122.150333,\n    label: 'T',\n    draggable: false,\n    title: 'Tesla',\n    www: 'https://www.tesla.com/',\n  },\n  {\n    lat: 37.331681,\n    lng: -122.0301,\n    label: 'A',\n    draggable: false,\n    title: 'Apple',\n    www: 'https://www.apple.com/',\n  },\n  {\n    lat: 37.484722,\n    lng: -122.148333,\n    label: 'F',\n    draggable: false,\n    title: 'Facebook',\n    www: 'https://www.facebook.com/',\n  },\n]\n\nconst MarkerList = () => {\n  return locations.map((location, index) => {\n    return <MarkerWithInfoWindow key={index.toString()} location={location} />\n  })\n}\n\nconst MarkerWithInfoWindow = ({ location }) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <Marker\n      onClick={() => setIsOpen(!isOpen)}\n      position={location}\n      title={location.title}\n      label={location.label}\n    >\n      {isOpen && (\n        <InfoWindow onCloseClick={() => setIsOpen(false)}>\n          <CNavLink href={location.www} target=\"_blank\">\n            {location.title}\n          </CNavLink>\n        </InfoWindow>\n      )}\n    </Marker>\n  )\n}\n\nconst GoogleMapsComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apiKey,\n  })\n\n  return (\n    isLoaded && (\n      <GoogleMap mapContainerStyle={{ height: `400px` }} center={defaultCenter} zoom={defaultZoom}>\n        {<MarkerList locations={locations} />}\n        <></>\n      </GoogleMap>\n    )\n  )\n}\n\nconst GoogleMaps = () => {\n  return (\n    <CCard>\n      <CCardHeader>\n        React Google Maps <ProBadge />\n      </CCardHeader>\n      <CCardBody>\n        <GoogleMapsComponent />\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default GoogleMaps\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}