{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\Biflora\\\\COREUI\\\\coreui_react_pro_admin_template\\\\src\\\\views\\\\plugins\\\\calendar\\\\Calendar.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { INITIAL_EVENTS, createEventId } from './event-utils';\nimport { CCard, CCardBody, CCardHeader } from '@coreui/react-pro';\nimport { ProBadge } from 'src/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekendsVisible: true,\n      currentEvents: []\n    };\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n    this.handleDateSelect = selectInfo => {\n      let title = prompt('Please enter a new title for your event');\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    };\n    this.handleEventClick = clickInfo => {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n        clickInfo.event.remove();\n      }\n    };\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(CCard, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: [\"FullCalendar \", /*#__PURE__*/_jsxDEV(ProBadge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          },\n          initialView: \"dayGridMonth\",\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          weekends: this.state.weekendsVisible,\n          initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n          ,\n          select: this.handleDateSelect,\n          eventContent: renderEventContent // custom render function\n          ,\n          eventClick: this.handleEventClick,\n          eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n          /* you can update a remote database when these fire:\n          eventAdd={function(){}}\n          eventChange={function(){}}\n          eventRemove={function(){}}\n          */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst renderEventContent = eventInfo => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: eventInfo.timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","INITIAL_EVENTS","createEventId","CCard","CCardBody","CCardHeader","ProBadge","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","Component","constructor","args","state","weekendsVisible","currentEvents","handleWeekendsToggle","setState","handleDateSelect","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","handleEventClick","clickInfo","confirm","event","remove","handleEvents","events","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","headerToolbar","left","center","right","initialView","editable","selectable","selectMirror","dayMaxEvents","weekends","initialEvents","select","eventContent","renderEventContent","eventClick","eventsSet","eventInfo","timeText"],"sources":["C:/code/Biflora/COREUI/coreui_react_pro_admin_template/src/views/plugins/calendar/Calendar.js"],"sourcesContent":["import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { INITIAL_EVENTS, createEventId } from './event-utils'\nimport { CCard, CCardBody, CCardHeader } from '@coreui/react-pro'\n\nimport { ProBadge } from 'src/components'\n\nexport default class Calendar extends React.Component {\n  state = {\n    weekendsVisible: true,\n    currentEvents: [],\n  }\n\n  render() {\n    return (\n      <CCard className=\"mb-4\">\n        <CCardHeader>\n          FullCalendar <ProBadge />\n        </CCardHeader>\n        <CCardBody>\n          <FullCalendar\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            headerToolbar={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay',\n            }}\n            initialView=\"dayGridMonth\"\n            editable={true}\n            selectable={true}\n            selectMirror={true}\n            dayMaxEvents={true}\n            weekends={this.state.weekendsVisible}\n            initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n            select={this.handleDateSelect}\n            eventContent={renderEventContent} // custom render function\n            eventClick={this.handleEventClick}\n            eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n            /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n          />\n        </CCardBody>\n      </CCard>\n    )\n  }\n\n  handleWeekendsToggle = () => {\n    this.setState({\n      weekendsVisible: !this.state.weekendsVisible,\n    })\n  }\n\n  handleDateSelect = (selectInfo) => {\n    let title = prompt('Please enter a new title for your event')\n    let calendarApi = selectInfo.view.calendar\n\n    calendarApi.unselect() // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay,\n      })\n    }\n  }\n\n  handleEventClick = (clickInfo) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove()\n    }\n  }\n\n  handleEvents = (events) => {\n    this.setState({\n      currentEvents: events,\n    })\n  }\n}\n\nconst renderEventContent = (eventInfo) => {\n  return (\n    <>\n      <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,cAAc,EAAEC,aAAa,QAAQ,eAAe;AAC7D,SAASC,KAAK,EAAEC,SAAS,EAAEC,WAAW,QAAQ,mBAAmB;AAEjE,SAASC,QAAQ,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,eAAe,MAAMC,QAAQ,SAASf,KAAK,CAACgB,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACpDC,KAAK,GAAG;MACNC,eAAe,EAAE,IAAI;MACrBC,aAAa,EAAE;IACjB,CAAC;IAAA,KAsCDC,oBAAoB,GAAG,MAAM;MAC3B,IAAI,CAACC,QAAQ,CAAC;QACZH,eAAe,EAAE,CAAC,IAAI,CAACD,KAAK,CAACC;MAC/B,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDI,gBAAgB,GAAIC,UAAU,IAAK;MACjC,IAAIC,KAAK,GAAGC,MAAM,CAAC,yCAAyC,CAAC;MAC7D,IAAIC,WAAW,GAAGH,UAAU,CAACI,IAAI,CAACC,QAAQ;MAE1CF,WAAW,CAACG,QAAQ,CAAC,CAAC,EAAC;;MAEvB,IAAIL,KAAK,EAAE;QACTE,WAAW,CAACI,QAAQ,CAAC;UACnBC,EAAE,EAAE3B,aAAa,CAAC,CAAC;UACnBoB,KAAK;UACLQ,KAAK,EAAET,UAAU,CAACU,QAAQ;UAC1BC,GAAG,EAAEX,UAAU,CAACY,MAAM;UACtBC,MAAM,EAAEb,UAAU,CAACa;QACrB,CAAC,CAAC;MACJ;IACF,CAAC;IAAA,KAEDC,gBAAgB,GAAIC,SAAS,IAAK;MAChC;MACA,IAAIC,OAAO,CAAE,8CAA6CD,SAAS,CAACE,KAAK,CAAChB,KAAM,GAAE,CAAC,EAAE;QACnFc,SAAS,CAACE,KAAK,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;IAAA,KAEDC,YAAY,GAAIC,MAAM,IAAK;MACzB,IAAI,CAACtB,QAAQ,CAAC;QACZF,aAAa,EAAEwB;MACjB,CAAC,CAAC;IACJ,CAAC;EAAA;EAtEDC,MAAMA,CAAA,EAAG;IACP,oBACElC,OAAA,CAACL,KAAK;MAACwC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACrBpC,OAAA,CAACH,WAAW;QAAAuC,QAAA,GAAC,eACE,eAAApC,OAAA,CAACF,QAAQ;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACdxC,OAAA,CAACJ,SAAS;QAAAwC,QAAA,eACRpC,OAAA,CAACX,YAAY;UACXoD,OAAO,EAAE,CAACnD,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;UAC5DkD,aAAa,EAAE;YACbC,IAAI,EAAE,iBAAiB;YACvBC,MAAM,EAAE,OAAO;YACfC,KAAK,EAAE;UACT,CAAE;UACFC,WAAW,EAAC,cAAc;UAC1BC,QAAQ,EAAE,IAAK;UACfC,UAAU,EAAE,IAAK;UACjBC,YAAY,EAAE,IAAK;UACnBC,YAAY,EAAE,IAAK;UACnBC,QAAQ,EAAE,IAAI,CAAC5C,KAAK,CAACC,eAAgB;UACrC4C,aAAa,EAAE3D,cAAe,CAAC;UAAA;UAC/B4D,MAAM,EAAE,IAAI,CAACzC,gBAAiB;UAC9B0C,YAAY,EAAEC,kBAAmB,CAAC;UAAA;UAClCC,UAAU,EAAE,IAAI,CAAC7B,gBAAiB;UAClC8B,SAAS,EAAE,IAAI,CAACzB,YAAa,CAAC;UAC9B;AACZ;AACA;AACA;AACA;QAJY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEZ;AAqCF;AAEA,MAAMe,kBAAkB,GAAIG,SAAS,IAAK;EACxC,oBACE1D,OAAA,CAAAE,SAAA;IAAAkC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,EAAIsB,SAAS,CAACC;IAAQ;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxC,OAAA;MAAAoC,QAAA,EAAIsB,SAAS,CAAC5B,KAAK,CAAChB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAC9B,CAAC;AAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}